#!/bin/groovy


def MVN_PROFILE = [
    'stg-rwasp' : 'staging'
]


def WLS_BASE = [
    'stg-rwasp' : '/rms/stag/wls',
    'pro-rwasp-hnd2' : '/rms/prod/wls'
]


def ATAGO_MOUNTPOINT = [
    'stg-rwasp' : '/a/nstg201/export/stg/vol1/rms/atago'
]


def APP_ETC = [
    'stg-rwasp' : 'item-api/target/rms/stag/conf/itemapi/A/etc'
]


def APP_WAR = [
    'stg-rwasp' : 'item-api/target/rms/stag/wls/itemapiA/applications/item-api-0.0.1-SNAPSHOT.war'
]


pipeline {


    agent none
    options {
        skipDefaultCheckout()
    }


    parameters {
        string(name: 'BRANCH_NAME', defaultValue: 'develop', description: 'What TAG / BRANCH to build?')
        choice(name: 'ENV', choices: 'stg-rwasp', description: 'What the Environment to build?')
        choice(name: 'ENDPOINT', choices: 'itema.rwasp-stg.hnd2.bdd.local\nitemb.rwasp-stg.hnd2.bdd.local\nitemc.rwasp-stg.hnd2.bdd.local', description: 'What Endpoint you want to deploy and switch?')
    }


    environment {
        GIT = 'https://git.rakuten-it.com/scm/jrms/item-api-for-x.git'
        REL_VERSION = "${ENV.contains('pro') ? BRANCH_NAME : 'SNAPSHOT-' + BRANCH_NAME.drop(BRANCH_NAME.lastIndexOf('/') + 1) + BUILD_NUMBER}"
        IMAGE = "rmsj/itemapi:$REL_VERSION"
        OWNER = 'dev-rmsx-xitem'
        SERVICE_GROUP = 'RMSx-migration-STG'
    }


    stages {


        stage('Checkout') {
            agent any
            steps {
                deleteDir()
                checkout scm: [$class: 'GitSCM', branches: [[name: "$BRANCH_NAME"]], userRemoteConfigs: [[credentialsId: 'Git-gep-jenkins', url: "$GIT"]]]
                stash(name: 'ws', includes: '**', excludes: '**/.git/**')
            }
        } // Checkout


        stage('Build') {
            agent any
            tools {
                maven 'Maven'
                jdk 'JDK8'
            }
            steps {
                deleteDir()
                unstash 'ws'
                sh "mvn -f validate-common/pom.xml -P ${MVN_PROFILE[ENV]} clean install"
                sh "mvn -f item-api/pom.xml -P ${MVN_PROFILE[ENV]} -Dmaven.test.skip=true clean package"
                stash(name: 'artefact', includes: '**', excludes: '**/.git/**')
            }
        } // Build


        stage('Docker Build') {
            agent any
            steps {
                deleteDir()
                unstash 'artefact'
                script {
                    sh 'wget https://nexus-rmsg.rwasp.intra.rakuten-it.com/nexus/content/repositories/rmsg-gecope/jersey-bundle-1.9.war'
                    app = docker.build("$IMAGE", "--build-arg ENV=$ENV --build-arg WLS_BASE=${WLS_BASE[ENV]} --build-arg ATAGO_MOUNTPOINT=${ATAGO_MOUNTPOINT[ENV]} --build-arg APP_ETC=${APP_ETC[ENV]} --build-arg APP_WAR=${APP_WAR[ENV]} .")
                    if(IMAGE.contains('SNAPSHOT')) {
                        rwasp.push(app)
                    } else {
                        rwasp.pushRelease(app)
                    }
                }
            }
        } // Docker Build


        stage('Deploy') {
            agent any
            steps {
                deleteDir()
                unstash 'ws'
                script {
                    Map config = [
                        ENV : ENV,
                        IMAGE : "$IMAGE",
                        Deploy_LOCAL_ENV_CONF : "rwasp/${ENV}/env.json",
                        Deploy_LOCAL_RUN_CONF : "rwasp/${ENV}/runtime.conf",
                        OWNER : OWNER,
                        SERVICE_GROUP : SERVICE_GROUP,
                        Switch_DOMAIN : ENDPOINT
                    ]
                    rwaspDeployV2(config)
                    rwaspSwitchV3(config)
                }
            }
        } //Deploy


    } // stages


} //pipeline


















